opam-version: "2.0"
name: "ligo-mdx"
version: "dev"
synopsis: "_Catchy headline_"
description: "_Project description_"
maintainer: "YOUR EMAIL ADDRESS"
authors: "YOUR NAME"
license: "Unlicense"
homepage: "https://github.com/USERNAME/proj"
bug-reports: "https://github.com/USERNAME/proj/issues"
depends: [
  "alcotest" {= "1.7.0" & with-test}
  "astring" {= "0.8.5"}
  "base" {= "v0.15.1"}
  "base-bigarray" {= "base"}
  "base-bytes" {= "base"}
  "base-threads" {= "base"}
  "base-unix" {= "base"}
  "base_bigstring" {= "v0.15.0"}
  "base_quickcheck" {= "v0.15.0"}
  "bin_prot" {= "v0.15.0"}
  "camlp-streams" {= "5.0.1"}
  "cmdliner" {= "1.2.0"}
  "core" {= "v0.15.1"}
  "core_kernel" {= "v0.15.0"}
  "cppo" {= "1.6.9"}
  "csexp" {= "1.5.2"}
  "dune" {= "3.9.1"}
  "dune-build-info" {= "3.9.1"}
  "dune-configurator" {= "3.9.1"}
  "either" {= "1.0.0"}
  "fieldslib" {= "v0.15.0"}
  "fix" {= "20230505"}
  "fmt" {= "0.9.0" & with-test}
  "fpath" {= "0.7.3"}
  "int_repr" {= "v0.15.0"}
  "jane-street-headers" {= "v0.15.0"}
  "jst-config" {= "v0.15.1"}
  "lwt" {= "5.6.1"}
  "menhir" {= "20230608"}
  "menhirLib" {= "20230608"}
  "menhirSdk" {= "20230608"}
  "num" {= "1.4"}
  "ocaml" {= "4.14.0"}
  "ocaml-base-compiler" {= "4.14.0"}
  "ocaml-compiler-libs" {= "v0.12.4"}
  "ocaml-config" {= "2"}
  "ocaml-options-vanilla" {= "1"}
  "ocaml-syntax-shims" {= "1.0.0" & with-test}
  "ocaml-version" {= "3.6.1"}
  "ocamlbuild" {= "0.14.2"}
  "ocamlfind" {= "1.9.6"}
  "ocamlformat" {= "0.25.1"}
  "ocamlformat-lib" {= "0.25.1"}
  "ocamlgraph" {= "2.0.0"}
  "ocp-indent" {= "1.8.1"}
  "ocplib-endian" {= "1.2"}
  "parsexp" {= "v0.15.0"}
  "ppx_assert" {= "v0.15.0"}
  "ppx_base" {= "v0.15.0"}
  "ppx_bench" {= "v0.15.1"}
  "ppx_bin_prot" {= "v0.15.0"}
  "ppx_cold" {= "v0.15.0"}
  "ppx_compare" {= "v0.15.0"}
  "ppx_custom_printf" {= "v0.15.0"}
  "ppx_derivers" {= "1.2.1"}
  "ppx_disable_unused_warnings" {= "v0.15.0"}
  "ppx_enumerate" {= "v0.15.0"}
  "ppx_expect" {= "v0.15.1"}
  "ppx_fields_conv" {= "v0.15.0"}
  "ppx_fixed_literal" {= "v0.15.0"}
  "ppx_hash" {= "v0.15.0"}
  "ppx_here" {= "v0.15.0"}
  "ppx_ignore_instrumentation" {= "v0.15.0"}
  "ppx_inline_test" {= "v0.15.1"}
  "ppx_jane" {= "v0.15.0"}
  "ppx_let" {= "v0.15.0"}
  "ppx_log" {= "v0.15.0"}
  "ppx_module_timer" {= "v0.15.0"}
  "ppx_optcomp" {= "v0.15.0"}
  "ppx_optional" {= "v0.15.0"}
  "ppx_pipebang" {= "v0.15.0"}
  "ppx_sexp_conv" {= "v0.15.1"}
  "ppx_sexp_message" {= "v0.15.0"}
  "ppx_sexp_value" {= "v0.15.0"}
  "ppx_stable" {= "v0.15.0"}
  "ppx_string" {= "v0.15.0"}
  "ppx_typerep_conv" {= "v0.15.0"}
  "ppx_variants_conv" {= "v0.15.0"}
  "ppxlib" {= "0.30.0"}
  "re" {= "1.10.4"}
  "result" {= "1.5"}
  "seq" {= "base"}
  "sexplib" {= "v0.15.1"}
  "sexplib0" {= "v0.15.1"}
  "splittable_random" {= "v0.15.0"}
  "stdio" {= "v0.15.0"}
  "stdlib-shims" {= "0.3.0"}
  "time_now" {= "v0.15.0"}
  "topkg" {= "1.0.7"}
  "typerep" {= "v0.15.0"}
  "uucp" {= "15.0.0"}
  "uuseg" {= "15.0.0"}
  "uutf" {= "1.0.3"}
  "variantslib" {= "v0.15.0"}
]
build: [
  ["dune" "subst"] {pinned}
  ["dune" "build" "-p" name "-j" jobs]
]
run-test: ["dune" "runtest" "-p" name]
dev-repo: "git+https://github.com/USERNAME/proj.git"
